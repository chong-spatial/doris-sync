name: Sync Apache Doris Fork

on:
  schedule:
    - cron: "0 0 * * *"  # Daily at 00:00 UTC
  workflow_dispatch:

jobs:
  sync-fork:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout Doris fork
        uses: actions/checkout@v4
        with:
          repository: chong-spatial/doris
          token: ${{ secrets.PAT }}
          path: doris-fork
          fetch-depth: 1  # Shallow clone

      - name: Configure Git
        run: |
          cd doris-fork
          git config user.email "action@github.com"
          git config user.name "GitHub Action"

      - name: Add upstream repository
        run: |
          cd doris-fork
          git remote add upstream https://github.com/apache/doris.git

      - name: Check for branch-4.0
        id: branch-check
        run: |
          cd doris-fork
          # Check if branch exists without fetching all refs
          if git ls-remote --exit-code --heads upstream refs/heads/branch-4.0; then
            echo "branch_exists=true" >> $GITHUB_OUTPUT
          else
            echo "branch_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Fetch upstream changes
        run: |
          cd doris-fork
          # Fetch only the branches we need
          git fetch --depth=1 upstream master
          if [ "${{ steps.branch-check.outputs.branch_exists }}" = 'true' ]; then
            git fetch --depth=1 upstream branch-4.0
          fi

      # Sync master branch
      - name: Sync master branch
        run: |
          cd doris-fork
          git checkout master
          git reset --hard upstream/master
          
          # Check if .github exists before trying to remove
          if [ -d ".github" ]; then
            git rm -rf --ignore-unmatch .github
            # Only commit if changes were made
            if ! git diff --cached --quiet; then
              git commit -m "Remove GitHub-specific files"
            fi
          fi
          git push origin master --force

      # Sync branch-4.0 if exists
      - name: Sync branch-4.0
        if: steps.branch-check.outputs.branch_exists == 'true'
        run: |
          cd doris-fork
          git checkout branch-4.0 2>/dev/null || git checkout -b branch-4.0 upstream/branch-4.0
          git reset --hard upstream/branch-4.0
          
          # Check if .github exists before trying to remove
          if [ -d ".github" ]; then
            git rm -rf --ignore-unmatch .github
            # Only commit if changes were made
            if ! git diff --cached --quiet; then
              git commit -m "Remove GitHub-specific files"
            fi
          fi
          git push origin branch-4.0 --force

      - name: Cleanup
        run: |
          cd doris-fork
          git remote remove upstream
