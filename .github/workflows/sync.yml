name: Sync Apache Doris Fork

on:
  schedule:
    - cron: "0 0 * * *"  # Daily at 00:00 UTC
  workflow_dispatch:

jobs:
  sync-fork:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Reduced timeout
    steps:
      - name: Checkout Doris fork (minimal clone)
        uses: actions/checkout@v4
        with:
          repository: chong-spatial/doris
          token: ${{ secrets.PAT }}
          path: doris-fork
          fetch-depth: 1  # Only latest commit
          sparse-checkout: |
            *
            !.github/workflows
            !.github/actions
            !.github/ISSUE_TEMPLATE

      - name: Configure Git
        run: |
          cd doris-fork
          git config user.email "action@github.com"
          git config user.name "GitHub Action"

      - name: Add upstream and fetch only needed branches
        run: |
          cd doris-fork
          git remote add upstream https://github.com/apache/doris.git
          # Fetch only master and check for branch-4.0 with minimal data
          git fetch --depth=1 upstream master
          git ls-remote --heads upstream branch-4.0 | grep -q branch-4.0 && \
            echo "branch_exists=true" >> $GITHUB_OUTPUT || \
            echo "branch_exists=false" >> $GITHUB_OUTPUT

      # Sync master branch
      - name: Sync master branch
        run: |
          cd doris-fork
          git checkout master
          git reset --hard upstream/master
          
          # Only remove .github if it exists
          if [ -d ".github" ]; then
            git rm -rf --ignore-unmatch .github
            # Only commit and push if changes were made
            if ! git diff --cached --quiet; then
              git commit -m "Remove GitHub-specific files"
              git push origin master --force
            fi
          fi

      # Sync branch-4.0 if exists
      - name: Sync branch-4.0
        if: steps.branch-check.outputs.branch_exists == 'true'
        run: |
          cd doris-fork
          # Fetch only the needed branch
          git fetch --depth=1 upstream branch-4.0
          git checkout branch-4.0 2>/dev/null || git checkout -b branch-4.0 upstream/branch-4.0
          git reset --hard upstream/branch-4.0
          
          # Only remove .github if it exists
          if [ -d ".github" ]; then
            git rm -rf --ignore-unmatch .github
            # Only commit and push if changes were made
            if ! git diff --cached --quiet; then
              git commit -m "Remove GitHub-specific files"
              git push origin branch-4.0 --force
            fi
          fi

      - name: Cleanup
        run: |
          cd doris-fork
          git remote remove upstream
